[{"path":"https://scotgovanalysis.github.io/RtoSQLServer/articles/RtoSQLServer.html","id":"preliminary-setup","dir":"Articles","previous_headings":"","what":"Preliminary setup","title":"Introduction to RtoSQLServer","text":"test data frame created examples. RtoSQLServer functions create connection database disconnect end function’s process. function requires server, database arguments often schema argument .","code":"library(RtoSQLServer)  # Make a test dataframe with n rows test_n_rows <- 123456 test_df <- data.frame(   colour_cat = sample(c(\"red\", \"amber\", \"green\"), test_n_rows, replace = TRUE),   val = runif(test_n_rows) ) # Set database connection details for use in functions: server <- \"server\\\\instance\" database <- \"my_database_name\" schema <- \"my_schema_name\""},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/articles/RtoSQLServer.html","id":"write-a-data-frame-to-database","dir":"Articles","previous_headings":"","what":"Write a data frame to database","title":"Introduction to RtoSQLServer","text":"can load test_df data frame MS SQL Server database using write_dataframe_to_db() function. set 10K batch size source R data frame loaded staging table batches size. example, include arguments append_to_existing versioned_table want use default FALSE . See Table loading method detailed description data frame loaded table using RtoSQLServer.","code":"# load data frame into MS SQL Server database write_dataframe_to_db(   server = server,   database = database,   schema = schema,   table_name = \"test_r_tbl\",   dataframe = test_df,   batch_size = 1e4, )"},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/articles/RtoSQLServer.html","id":"get-table-metadata","dir":"Articles","previous_headings":"","what":"Get table metadata","title":"Introduction to RtoSQLServer","text":"table loaded can check columns, column data types get summary info using db_table_metadata().","code":"# get table metadata including summary stats (getting the extra stats is # slower for large tables) db_table_metadata(   server = server,   database = database,   schema = schema,   table_name = \"test_r_tbl\",   summary_stats = TRUE )"},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/articles/RtoSQLServer.html","id":"read-database-table-into-r","dir":"Articles","previous_headings":"","what":"Read database table into R","title":"Introduction to RtoSQLServer","text":"can read database table back R data frame using read_table_from_db(). possible read subset table columns using character vector column names columns argument. filter can also specified filter_stmt read subset rows. filter written R, SQL syntax. See column row filtering article information.","code":"# read all rows and columns from test_r_tbl into data frame db_df <- read_table_from_db(   server = server,   database = database,   schema = schema,   table_name = \"test_r_tbl\", )"},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/articles/RtoSQLServer.html","id":"append-rows-to-existing-table","dir":"Articles","previous_headings":"","what":"Append rows to existing table","title":"Introduction to RtoSQLServer","text":"Eventually might rows load database table. can using write_dataframe_to_db() specifying append_to_existing = TRUE. case test_df2 data frame extra column. loaded append_to_existing = TRUE option extra column added existing table using add_column() populated source data frame values. course, existing records database table NULL new column.","code":"# Make another test dataframe to load with append option # An extra column is added to this data frame to demo functionality test_n_rows <- 1234 test_df2 <- data.frame(   colour_cat = sample(c(\"blue\", \"purple\", \"pink\"), test_n_rows, replace = TRUE),   val = runif(test_n_rows),   extra_col = \"a\" ) write_dataframe_to_db(   server = server,   database = database,   schema = schema,   table_name = \"test_r_tbl\",   dataframe = test_df2,   batch_size = 1e3,   append_to_existing = TRUE )"},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/articles/RtoSQLServer.html","id":"drop-table-column","dir":"Articles","previous_headings":"","what":"Drop table column","title":"Introduction to RtoSQLServer","text":"decide want newly added column can use drop_column() delete database table.","code":"drop_column(   server = server,   database = database,   schema = schema,   table_name = \"test_r_tbl\",   column_name = \"extra_col\" )"},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/articles/RtoSQLServer.html","id":"delete-table-rows","dir":"Articles","previous_headings":"","what":"Delete table rows","title":"Introduction to RtoSQLServer","text":"can also delete subset rows database table using delete_table_rows() specifying filter filter_stmt argument. syntax filter R format read_table_from_db(). careful deleting rows filter correct going delete rows wish. Testing filter_stmt argument read_table_from_db() first can good idea.","code":"delete_table_rows(   server = server,   database = database,   schema = schema,   table_name = \"test_r_tbl\",   filter_stmt = \"colour_cat == 'blue' & val > 0.5\" )"},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/articles/RtoSQLServer.html","id":"drop-a-table","dir":"Articles","previous_headings":"","what":"Drop a table","title":"Introduction to RtoSQLServer","text":"delete table completely database schema, use drop_table_from_db().","code":"drop_table_from_db(   server = server,   database = database,   schema = schema,   table_name = \"test_r_tbl\" )"},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/articles/RtoSQLServer.html","id":"show-tables-and-views-in-a-schema","dir":"Articles","previous_headings":"","what":"Show tables (and views) in a schema","title":"Introduction to RtoSQLServer","text":"want see tables (views) remain schema use show_schema_tables().","code":"show_schema_tables(   server = server,   database = database,   schema = schema,   include_views = TRUE )"},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/articles/RtoSQLServer.html","id":"views","dir":"Articles","previous_headings":"","what":"Views","title":"Introduction to RtoSQLServer","text":"Views stored queries database appear tables can read read_table_from_db(). can useful regularly need join tables together apply column selections row filters data wish read R. can write CREATE VIEW SQL statement use execute_sql() R run SQL create view. create view function might added RtoSQLServer future.","code":""},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/articles/why_use.html","id":"importing-large-dataframes","dir":"Articles","previous_headings":"","what":"Importing large dataframes","title":"Why use this package","text":"key benefit package ensure data loading process robust using DBI odbc packages alone. loading large dataframes R MS SQL Server using DBI found loading process can hang never complete. People using R load data SQL Server may working home varying quality connection database server. RtoSQLServer two things help data loading: Loading dataframe staging table database first . load staging table complete, target table created copy staging table. helps prevent misleading problems incomplete loads. staging table dropped target table created successfully. Loading batches. RtoSQLServer package’s write_dataframe_to_db function includes batch_size argument. Batch size number rows R dataframe loaded database staging table . Using batch loading process RtoSQLServer possible load large tables possible load one using DBI. batch size set user default 100K user need worry suitable batch size splitting source dataframe R.","code":""},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/articles/why_use.html","id":"self-contained-database-transactions","dir":"Articles","previous_headings":"","what":"Self-contained database transactions","title":"Why use this package","text":"Unlike DBI odbc user must open database connection object R pass connection functions (hopefully remembering close end R session), RtoSQLServer database connection established calling function closed end function. means hung connections database, waiting user closes R. RtoSQLServer functions can used within user custom functions self-contained tasks rely open connection input argument. also means user need know setup connection, simply pass server database name function. can make easier run code others written. Repeatedly opening closing connections might make things slightly slower, however thought much impact workflow average R user database transactions R session.","code":""},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/articles/why_use.html","id":"checking-of-table-column-names-and-datatypes-from-r-to-sql-server","dir":"Articles","previous_headings":"","what":"Checking of table, column names and datatypes from R to SQL Server","title":"Why use this package","text":"DBI odbc packages designed work many different database engines. RtoSQLServer package focused Microsoft SQL Server. allows checks written ensure table name compatible SQL Server read ODBC driver. package maps R dataframe datatypes specific SQL Server datatypes ensuring consistent, predictable data storage. current max length string R character column vector used select size SQL Server nvarchar() database column.","code":""},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/articles/why_use.html","id":"extra-functionality-to-help-non-database-specialists","dir":"Articles","previous_headings":"","what":"Extra functionality to help non-database specialists","title":"Why use this package","text":"RtoSQLServer functions modify existing tables. drop_column(), rename_column(), add_column() column functions rename_table() function equivalents DBI. saves users looking SQL. db_table_metadata() show_schema_tables() functions provide easy way get information existing database objects. execute_sql() function easy way run custom SQL closed transaction.","code":""},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/articles/why_use.html","id":"system-versioning","dir":"Articles","previous_headings":"","what":"System Versioning","title":"Why use this package","text":"RtoSQLServer allows user create table MS SQL Server System Versioning enabled. using RtoSQLServer write_dataframe_to_db function used versioned_table argument set TRUE. System Versioning adds date / timestamp (SQL Server datatype DATETIME2) start end columns table. <table name>History table created database schema, storing history previous records following updates deletes. allows users maintain archive table setup R, without needing know SQL used establish System Versioning part create table SQL expression. drop system versioned table using drop_table_from_db requires extra privileges SQL Server database. may need contact system administrator drop tables receive error.","code":""},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Scottish Government  Email Scottish Government>  Scottish Government GitHub profile>. Copyright holder, funder. Tom Wilson  Email Tom Wilson>  Tom Wilson GitHub profile>. Maintainer.","code":""},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wilson T (2025). RtoSQLServer: Load R Dataframes SQL Server Database Tables. R package version 0.2.3, https://ScotGovAnalysis.github.io/RtoSQLServer.","code":"@Manual{,   title = {RtoSQLServer: Load R Dataframes into SQL Server Database Tables},   author = {Tom Wilson},   year = {2025},   note = {R package version 0.2.3},   url = {https://ScotGovAnalysis.github.io/RtoSQLServer}, }"},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/index.html","id":"rtosqlserver","dir":"","previous_headings":"","what":"Load R Dataframes into SQL Server Database Tables","title":"Load R Dataframes into SQL Server Database Tables","text":"Load R data frames MS SQL Server database modify MS SQL Server tables R. help documentation, see package website.","code":""},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Load R Dataframes into SQL Server Database Tables","text":"working within Scottish Government, package can installed way R packages internally. Alternatively, package can installed directly Github locally zip. install directly GitHub: work, install manual download: Download zip repository GitHub. Save downloaded zip specific directory (e.g. C:/temp). Install command specifying path downloaded zip:","code":"remotes::install_github(\"DataScienceScotland/rtosqlserver\", upgrade = \"never\") remotes::install_local(\"C:/temp/RtoSQLServer-main.zip\", upgrade=\"never\")"},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/index.html","id":"functionality","dir":"","previous_headings":"","what":"Functionality","title":"Load R Dataframes into SQL Server Database Tables","text":"well loading R dataframes SQL Server databases, functions currently available : Read database table R dataframe, optionally specifying subset table columns row filter. Rename drop table database. Add, drop, rename columns existing database tables. Read existing table metadata (columns, data types, summary info). List tables views schema. Create MS SQL Server database connection object use DBI dbplyr packages. Run input sql database return data frame select statement.","code":""},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Load R Dataframes into SQL Server Database Tables","text":"See Get started examples main functionality.","code":"# Loading data frame example library(RtoSQLServer)  # Make a test dataframe with n rows test_n_rows <- 123456 test_df <- data.frame(a = rep(\"a\", test_n_rows), b = rep(\"b\", test_n_rows))  # Set database connection details: server <- \"server\\\\instance\" database <- \"my_database_name\" schema <- \"my_schema_name\"  # Write the test dataframe to a SQL Server table write_dataframe_to_db(   server = server,   database = database,   schema = schema,   table_name = \"test_r_tbl\",   dataframe = test_df )"},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/reference/add_column.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a Column to an existing database table — add_column","title":"Add a Column to an existing database table — add_column","text":"Adds specified column table. column data type can mapped R object, else database column data type must explicitly specified.","code":""},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/reference/add_column.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a Column to an existing database table — add_column","text":"","code":"add_column(   server,   database,   schema,   table_name,   column_name,   sql_data_type = NULL,   sample_value = NULL )"},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/reference/add_column.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a Column to an existing database table — add_column","text":"server Server instance SQL Server database found. database Database containing table column added. schema Name schema containing table. table_name Name table column added. column_name name column added. sql_data_type SQL datatype column character string. example \"nvarchar(255)\" (optional, can inferred sample_value alternatively). Use db_table_metadata() see data types existing tables/columns database, refer MS SQL Server guidance data types. sample_value Existing R data frame column, value defines datatype column. input correct R class type, example, strings character, numbers numeric, dates Date, date times POSIXct POSIXlt. Optional superseded sql_data_type specified. example valid inputs: iris$Species, \"sample string\", numeric(), .Date(\"2024-01-01\").","code":""},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/reference/add_column.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a Column to an existing database table — add_column","text":"","code":"if (FALSE) { # \\dontrun{ # Add a Species_new column to test_iris table add_column(   server = \"my_server\",   database = \"my_database\",   schema = \"my_schema\",   table_name = \"test_iris\",   column_name = \"Species_new\",   sample_value = character(0) ) } # }"},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/reference/create_sqlserver_connection.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a connection to a SQL Server database — create_sqlserver_connection","title":"Create a connection to a SQL Server database — create_sqlserver_connection","text":"Establishes connection SQL Server database using ODBC driver. function uses Windows authentication . Use DBI::dbDisconnect() disconnect connection longer use.","code":""},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/reference/create_sqlserver_connection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a connection to a SQL Server database — create_sqlserver_connection","text":"","code":"create_sqlserver_connection(server, database, timeout = 10)"},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/reference/create_sqlserver_connection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a connection to a SQL Server database — create_sqlserver_connection","text":"server Server instance SQL Server database found. database name database connect . timeout timeout period (seconds) establishing connection. Defaults 10.","code":""},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/reference/create_sqlserver_connection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a connection to a SQL Server database — create_sqlserver_connection","text":"connection object class \"Microsoft SQL Server\" odbc package.","code":""},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/reference/create_sqlserver_connection.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a connection to a SQL Server database — create_sqlserver_connection","text":"","code":"if (FALSE) { # \\dontrun{ # Connect to a SQL Server database con <- create_sqlserver_connection(   server = \"my_server\",   database = \"my_database\" )  # Remember to disconnect after usage DBI::dbDisconnect(con) } # }"},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/reference/db_table_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Return metadata about an existing database table — db_table_metadata","title":"Return metadata about an existing database table — db_table_metadata","text":"Returns dataframe information existing table. includes name column, datatype (optionally) range values.","code":""},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/reference/db_table_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return metadata about an existing database table — db_table_metadata","text":"","code":"db_table_metadata(server, database, schema, table_name, summary_stats = FALSE)"},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/reference/db_table_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return metadata about an existing database table — db_table_metadata","text":"server Server-instance SQL Server database running. database Name SQL Server database table found. schema Name schema SQL Server database table found. table_name Name table. summary_stats Add summary stats col metadata output. includes ranges, number distinct number NULL values. Defaults TRUE, however much query time much quicker FALSE just returns col names types.","code":""},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/reference/db_table_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return metadata about an existing database table — db_table_metadata","text":"Dataframe table / column metadata.","code":""},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/reference/db_table_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return metadata about an existing database table — db_table_metadata","text":"","code":"if (FALSE) { # \\dontrun{ db_table_metadata(   database = \"my_database\",   server = \"my_server\",   table_name = \"my_table\", ) } # }"},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/reference/delete_table_rows.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete rows from an existing database table — delete_table_rows","title":"Delete rows from an existing database table — delete_table_rows","text":"Can either delete rows input table just subset specifying filter. using filter, recommended test first using filter read_table_from_db(). ensures filter working deleting rows unexpectedly.","code":""},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/reference/delete_table_rows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete rows from an existing database table — delete_table_rows","text":"","code":"delete_table_rows(server, database, schema, table_name, filter_stmt = NULL)"},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/reference/delete_table_rows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete rows from an existing database table — delete_table_rows","text":"server Server instance SQL Server database running. database Database containing table rows delete. schema Name database schema containing table. table_name Name table rows delete. filter_stmt Optional filter statement delete subset table rows filter TRUE. character expression format dplyr::filter() query, example \"Species == 'virginica'\" translated SQL using dbplyr::translate_sql(). One way achieve right syntax argument pass dplyr::filter() expression deparse1(substitute()), example: deparse1(substitute(Species == \"virginica\")).","code":""},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/reference/delete_table_rows.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Delete rows from an existing database table — delete_table_rows","text":"","code":"if (FALSE) { # \\dontrun{ delete_table_rows(   database = database,   server = server,   schema = schema,   table_name = \"test_iris\",   filter_stmt = \"Species == 'setosa'\" ) } # }"},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/reference/drop_column.html","id":null,"dir":"Reference","previous_headings":"","what":"Drop a Column from an existing database table — drop_column","title":"Drop a Column from an existing database table — drop_column","text":"Drops specified column table. Checks table exists schema column present table attempting drop column.","code":""},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/reference/drop_column.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drop a Column from an existing database table — drop_column","text":"","code":"drop_column(server, database, schema, table_name, column_name)"},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/reference/drop_column.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drop a Column from an existing database table — drop_column","text":"server Server instance SQL Server database found. database Database containing table column drop. schema Name schema containing table. table_name Name table column dropped. column_name name column dropped.","code":""},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/reference/drop_column.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Drop a Column from an existing database table — drop_column","text":"","code":"if (FALSE) { # \\dontrun{ # Drop the Species column from test_iris table drop_column(   server = \"my_server\",   database = \"my_database\",   schema = \"my_schema\",   table_name = \"test_iris\",   column_name = \"Species\" ) } # }"},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/reference/drop_table_from_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Drop SQL Server table from database — drop_table_from_db","title":"Drop SQL Server table from database — drop_table_from_db","text":"Drop specified table. Check versioned table. attempt disable versioning drop history table . Extra permissions may required drop versioned table contact system admin receive error showing case.","code":""},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/reference/drop_table_from_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drop SQL Server table from database — drop_table_from_db","text":"","code":"drop_table_from_db(   server,   database,   schema,   table_name,   versioned_table = FALSE,   silent = FALSE )"},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/reference/drop_table_from_db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drop SQL Server table from database — drop_table_from_db","text":"server Server instance SQL Server database found. database Database containing table dropped. schema Name schema containing table dropped. table_name Name table dropped. versioned_table versioned table. Legacy argument longer used. now checked every time regardless T F input. silent TRUE give message dropping complete. Defaults FALSE.","code":""},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/reference/drop_table_from_db.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Drop SQL Server table from database — drop_table_from_db","text":"","code":"if (FALSE) { # \\dontrun{ drop_table_from_db(   database = \"my_database\",   server = \"my_server\",   schema = \"my_schema\",   table_name = \"table_to_drop\" ) } # }"},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/reference/execute_sql.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect, execute SQL in SQL Server database and then disconnect — execute_sql","title":"Connect, execute SQL in SQL Server database and then disconnect — execute_sql","text":"Connect, execute SQL SQL Server database disconnect","code":""},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/reference/execute_sql.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect, execute SQL in SQL Server database and then disconnect — execute_sql","text":"","code":"execute_sql(server, database, sql, output = FALSE)"},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/reference/execute_sql.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect, execute SQL in SQL Server database and then disconnect — execute_sql","text":"server Server instance SQL Server database running. database SQL Server database SQL executed. sql SQL executed database. output TRUE write output SQL Dataframe. Defaults FALSE.","code":""},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/reference/execute_sql.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Connect, execute SQL in SQL Server database and then disconnect — execute_sql","text":"Dataframe NULL depending SQL executed.","code":""},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/reference/execute_sql.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Connect, execute SQL in SQL Server database and then disconnect — execute_sql","text":"","code":"if (FALSE) { # \\dontrun{ sql_to_run <- \"select test_column, other_column from my_test_table where other_column > 10\" execute_sql(   database = \"my_database\", server = \"my_server\",   sql = sql_to_run, output = TRUE ) } # }"},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/reference/read_table_from_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a SQL Server table into an R dataframe — read_table_from_db","title":"Read a SQL Server table into an R dataframe — read_table_from_db","text":"SQL Server table (view) can column row filters applied read R data frame. can help reading large table data required R session. See vignette(\"read_filter\") information.","code":""},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/reference/read_table_from_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a SQL Server table into an R dataframe — read_table_from_db","text":"","code":"read_table_from_db(   server,   database,   schema,   table_name,   columns = NULL,   filter_stmt = NULL,   include_pk = FALSE,   cast_datetime2 = TRUE )"},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/reference/read_table_from_db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a SQL Server table into an R dataframe — read_table_from_db","text":"server Server instance SQL Server database running. database Database containing table read. schema Name database schema containing table read. table_name Name table database read. columns Optional vector column names select. filter_stmt Optional filter statement read subset rows specified database table. character expression format dplyr::filter() query, example \"Species == 'virginica'\" translated SQL using dbplyr::translate_sql(). One way achieve right syntax argument pass dplyr::filter() expression deparse1(substitute()), example deparse1(substitute(Species == \"virginica\")) include_pk Whether include primary key column output dataframe. primary key  column added automatically table loaded database using create_replace_table() <table_name>ID. Defaults FALSE. cast_datetime2 Cast datetime2 data type columns datetime. help older ODBC drivers datetime2 columns read R character POSIXct. Defaults TRUE.","code":""},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/reference/read_table_from_db.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a SQL Server table into an R dataframe — read_table_from_db","text":"Dataframe table.","code":""},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/reference/read_table_from_db.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read a SQL Server table into an R dataframe — read_table_from_db","text":"confident writing SQL may prefer use execute_sql() function instead.","code":""},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/reference/read_table_from_db.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read a SQL Server table into an R dataframe — read_table_from_db","text":"","code":"if (FALSE) { # \\dontrun{ read_table_from_db(   server = \"my_server\",   database = \"my_database\",   schema = \"my_schema\",   table_name = \"my_table\",   columns = c(\"column1\", \"column2\"),   filter_stmt = \"column1 < 5 & column2 == 'b'\" ) } # }"},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/reference/rename_column.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename a column in an existing database table — rename_column","title":"Rename a column in an existing database table — rename_column","text":"Renames specified column table. function checks table column exist schema attempting rename column. MS SQL Server done using EXEC sp_rename.","code":""},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/reference/rename_column.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename a column in an existing database table — rename_column","text":"","code":"rename_column(   server,   database,   schema,   table_name,   old_column_name,   new_column_name )"},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/reference/rename_column.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename a column in an existing database table — rename_column","text":"server Server instance SQL Server database found. database Database containing table column belongs. schema Name schema containing table. table_name Name table containing column. old_column_name current name column renamed. new_column_name new name column.","code":""},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/reference/rename_column.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rename a column in an existing database table — rename_column","text":"","code":"if (FALSE) { # \\dontrun{ # Rename Species column to SpeciesRenamed in test_iris table rename_column(   server = \"my_server\",   database = \"my_database\",   schema = \"my_schema\",   table_name = \"test_iris\",   old_column_name = \"Species\",   new_column_name = \"SpeciesRenamed\" ) } # }"},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/reference/rename_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename a table in the database — rename_table","title":"Rename a table in the database — rename_table","text":"Renames specified table. function checks table exists schema attempting rename . MS SQL Server, done using EXEC sp_rename.","code":""},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/reference/rename_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename a table in the database — rename_table","text":"","code":"rename_table(server, database, schema, old_table_name, new_table_name)"},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/reference/rename_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename a table in the database — rename_table","text":"server Server instance SQL Server database found. database Database containing table renamed. schema Name schema containing table. old_table_name current name table renamed. new_table_name new name table.","code":""},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/reference/rename_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rename a table in the database — rename_table","text":"","code":"if (FALSE) { # \\dontrun{ # Rename test_iris table to test_iris_renamed rename_table(   server = \"my_server\",   database = \"my_database\",   schema = \"my_schema\",   old_table_name = \"test_iris\",   new_table_name = \"test_iris_renamed\" ) } # }"},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/reference/show_schema_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Show all tables (and optionally views) in a schema — show_schema_tables","title":"Show all tables (and optionally views) in a schema — show_schema_tables","text":"Returns data frame table name, creation date optionally whether table view. Queries MS SQL Server sys.tables sys.objects extract information.","code":""},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/reference/show_schema_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show all tables (and optionally views) in a schema — show_schema_tables","text":"","code":"show_schema_tables(server, database, schema, include_views = FALSE)"},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/reference/show_schema_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show all tables (and optionally views) in a schema — show_schema_tables","text":"server Server instance SQL Server database running. database Database containing schema list tables . schema Name database schema list tables . include_views TRUE includes views well tables adds object_type column indicate . Defaults FALSE.","code":""},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/reference/show_schema_tables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show all tables (and optionally views) in a schema — show_schema_tables","text":"Dataframe table names, creation dates optionally whether table view.","code":""},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/reference/show_schema_tables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show all tables (and optionally views) in a schema — show_schema_tables","text":"","code":"if (FALSE) { # \\dontrun{ show_schema_tables(   server = \"my_server\",   database = \"my_database\",   schema = \"my_schema\",   include_views = TRUE ) } # }"},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/reference/write_dataframe_to_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Write an R data frame to a SQL Server table — write_dataframe_to_db","title":"Write an R data frame to a SQL Server table — write_dataframe_to_db","text":"R data frame rows initially loaded staging table batches. See vignette(\"load_method\") information. data frame column data types mapped equivalents SQL Server.","code":""},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/reference/write_dataframe_to_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write an R data frame to a SQL Server table — write_dataframe_to_db","text":"","code":"write_dataframe_to_db(   server,   database,   schema,   table_name,   dataframe,   append_to_existing = FALSE,   batch_size = 1e+05,   versioned_table = FALSE )"},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/reference/write_dataframe_to_db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write an R data frame to a SQL Server table — write_dataframe_to_db","text":"server Server instance SQL Server database running. database Name SQL Server database table written. schema Name schema SQL Server database table created. table_name Name table created SQL Server database. dataframe Source R dataframe written SQL Server database. append_to_existing Boolean TRUE rows appended existing database table (exists). Default FALSE. batch_size Source R dataframe rows loaded staging SQL Server table batches many rows time. versioned_table Create table SQL Server system versioning. Defaults FALSE. appending existing table change existing versioning status. overwriting existing versioned table may receive permissions error due dropping existing versioned table failing. Contact sysadmin drop versioned table .","code":""},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/reference/write_dataframe_to_db.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Write an R data frame to a SQL Server table — write_dataframe_to_db","text":"Can create table optionally system versioning . However, extra permissions may required drop overwrite system versioned tables use option caution.","code":""},{"path":"https://scotgovanalysis.github.io/RtoSQLServer/reference/write_dataframe_to_db.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write an R data frame to a SQL Server table — write_dataframe_to_db","text":"","code":"if (FALSE) { # \\dontrun{ write_dataframe_to_db(   server = \"my_server\",   schema = \"my_schema\",   table_name = \"output_table\",   dataframe = my_df ) } # }"}]
